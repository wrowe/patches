Index: acinclude.m4
===================================================================
--- acinclude.m4	(revision 1749334)
+++ acinclude.m4	(working copy)
@@ -312,8 +312,7 @@
   AC_ARG_ENABLE(translit($1,_,-),APACHE_HELP_STRING(optname(),$2),force_$1=$enableval,enable_$1=ifelse($5,,maybe-all,$5))
   undefine([optname])dnl
   _apmod_extra_msg=""
-  dnl When --enable-modules=most or --enable-modules=(really)all is set and the
-  dnl module was not explicitly requested, allow a module to disable itself if
+  dnl If the module was not explicitly requested, allow it to disable itself if
   dnl its pre-reqs fail.
   case "$enable_$1" in
     yes|static|shared)
@@ -320,14 +319,8 @@
       _apmod_required="yes"
       ;;
     *)
-      case "$module_selection" in
-      reallyall|all|most)
-        _apmod_required="no"
-        ;;
-      *)
-        _apmod_required="yes"
-        ;;
-      esac
+      _apmod_required="no"
+      ;;
   esac
   if test "$enable_$1" = "static"; then
     enable_$1=static
@@ -360,13 +353,14 @@
     dnl that may disable it because of missing dependencies.
     ifelse([$6$7],,:,
            [AC_MSG_RESULT([checking dependencies])
-            ifelse([$7],,:,[if test "$enable_$7" = "no" ; then
+            ifelse([$7],,:,[m4_foreach([prereq],[$7],
+                           [if test "$enable_[]prereq" = "no" ; then
                               enable_$1=no
-                              AC_MSG_WARN("mod_$7 is disabled but required for mod_$1")
-                            elif test "$enable_$1" = "static" && test "$enable_$7" != "static" ; then
+                              AC_MSG_WARN("mod_[]prereq is disabled but required for mod_$1")
+                            elif test "$enable_$1" = "static" && test "$enable_[]prereq" != "static" ; then
                               enable_$1=no
-                              AC_MSG_WARN("cannot build mod_$1 statically if mod_$7 is built shared")
-                            else])
+                              AC_MSG_WARN("cannot build mod_$1 statically if mod_[]prereq is built shared")
+                            el])se])
             ifelse([$6],,:,[  $6])
             ifelse([$7],,:,[fi])
             AC_MSG_CHECKING(whether to enable mod_$1)
Index: modules/core/config.m4
===================================================================
--- modules/core/config.m4	(revision 1749334)
+++ modules/core/config.m4	(working copy)
@@ -45,7 +45,7 @@
 
 APACHE_MODULE(so, DSO capability.  This module will be automatically enabled unless you build all modules statically., , , $enable_so)
 
-APACHE_MODULE(watchdog, Watchdog module, , , , [
+APACHE_MODULE(watchdog, Watchdog module, , , most, [
     APR_CHECK_APR_DEFINE(APR_HAS_THREADS)
     if test $ac_cv_define_APR_HAS_THREADS = "no"; then
         AC_MSG_WARN([mod_watchdog requires apr to be built with --enable-threads])
Index: modules/proxy/config.m4
===================================================================
--- modules/proxy/config.m4	(revision 1749334)
+++ modules/proxy/config.m4	(working copy)
@@ -2,21 +2,23 @@
 
 APACHE_MODPATH_INIT(proxy)
 
-if test "$enable_proxy" = "shared"; then
-  proxy_mods_enable=shared
-elif test "$enable_proxy" = "yes"; then
-  proxy_mods_enable=yes
-else
-  proxy_mods_enable=most
-fi
+proxy_objs="mod_proxy.lo proxy_util.lo"
+APACHE_MODULE(proxy, Apache proxy module, $proxy_objs, , most)
 
-if test "$proxy_mods_enable" = "no"; then
-  enable_proxy_hcheck=no
+dnl set aside module selections and default, and set the module default to the
+dnl same scope (shared|static) as selected for mod proxy, along with setting
+dnl the default selection to "most" for remaining proxy modules, mirroring the
+dnl behavior of 2.4.1 and later, but failing ./configure only if an explicitly
+dnl enabled module is missing its prereqs
+save_module_selection=$module_selection
+save_module_default=$module_default
+if test "$enable_proxy" != "no"; then
+    module_selection=most
+    if test "$enable_proxy" = "shared" -o "$enable_proxy" = "static"; then
+        module_default=$enable_proxy
+    fi
 fi
 
-proxy_objs="mod_proxy.lo proxy_util.lo"
-APACHE_MODULE(proxy, Apache proxy module, $proxy_objs, , $proxy_mods_enable)
-
 proxy_connect_objs="mod_proxy_connect.lo"
 proxy_ftp_objs="mod_proxy_ftp.lo"
 proxy_http_objs="mod_proxy_http.lo"
@@ -43,11 +45,11 @@
     ;;
 esac
 
-APACHE_MODULE(proxy_connect, Apache proxy CONNECT module.  Requires and is enabled by --enable-proxy., $proxy_connect_objs, , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_ftp, Apache proxy FTP module.  Requires and is enabled by --enable-proxy., $proxy_ftp_objs, , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_http, Apache proxy HTTP module.  Requires and is enabled by --enable-proxy., $proxy_http_objs, , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_fcgi, Apache proxy FastCGI module.  Requires and is enabled by --enable-proxy., $proxy_fcgi_objs, , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_scgi, Apache proxy SCGI module.  Requires and is enabled by --enable-proxy., $proxy_scgi_objs, , $proxy_mods_enable,, proxy)
+APACHE_MODULE(proxy_connect, Apache proxy CONNECT module.  Requires --enable-proxy., $proxy_connect_objs, , most, , proxy)
+APACHE_MODULE(proxy_ftp, Apache proxy FTP module.  Requires --enable-proxy., $proxy_ftp_objs, , most, , proxy)
+APACHE_MODULE(proxy_http, Apache proxy HTTP module.  Requires --enable-proxy., $proxy_http_objs, , most, , proxy)
+APACHE_MODULE(proxy_fcgi, Apache proxy FastCGI module.  Requires --enable-proxy., $proxy_fcgi_objs, , most, , proxy)
+APACHE_MODULE(proxy_scgi, Apache proxy SCGI module.  Requires --enable-proxy., $proxy_scgi_objs, , most, , proxy)
 APACHE_MODULE(proxy_fdpass, Apache proxy to Unix Daemon Socket module.  Requires --enable-proxy., $proxy_fdpass_objs, , , [
   AC_CHECK_DECL(CMSG_DATA,,, [
     #include <sys/types.h>
@@ -58,14 +60,17 @@
     enable_proxy_fdpass=no
   fi
 ],proxy)
-APACHE_MODULE(proxy_wstunnel, Apache proxy Websocket Tunnel module.  Requires and is enabled by --enable-proxy., $proxy_wstunnel_objs, , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_ajp, Apache proxy AJP module.  Requires and is enabled by --enable-proxy., $proxy_ajp_objs, , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_balancer, Apache proxy BALANCER module.  Requires and is enabled by --enable-proxy., $proxy_balancer_objs, , $proxy_mods_enable,, proxy)
+APACHE_MODULE(proxy_wstunnel, Apache proxy Websocket Tunnel module.  Requires --enable-proxy., $proxy_wstunnel_objs, , most, , proxy)
+APACHE_MODULE(proxy_ajp, Apache proxy AJP module.  Requires --enable-proxy., $proxy_ajp_objs, , most, , proxy)
+APACHE_MODULE(proxy_balancer, Apache proxy BALANCER module.  Requires --enable-proxy., $proxy_balancer_objs, , most, , proxy)
 
-APACHE_MODULE(proxy_express, mass reverse-proxy module. Requires --enable-proxy., , , $proxy_mods_enable,, proxy)
-APACHE_MODULE(proxy_hcheck, reverse-proxy health-check module. Requires --enable-proxy and --enable-watchdog., , , $enable_proxy_hcheck,, watchdog)
+APACHE_MODULE(proxy_express, mass reverse-proxy module. Requires --enable-proxy., , , most, , proxy)
+APACHE_MODULE(proxy_hcheck, [reverse-proxy health-check module. Requires --enable-proxy and --enable-watchdog.], , , most, , [proxy,watchdog])
 
 APR_ADDTO(INCLUDES, [-I\$(top_srcdir)/$modpath_current])
 
+module_selection=$save_module_selection
+module_default=$save_module_default
+
 APACHE_MODPATH_FINISH
 
